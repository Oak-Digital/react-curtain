{"version":3,"file":"CurtainLayout.stories-57b6beeb.js","sources":["../../src/stories/CurtainLayout.tsx"],"sourcesContent":["import { useState } from 'react';\n\nimport { Curtain, CurtainProps } from '../components/Curtain';\n\nexport const Layout = (props: CurtainProps) => {\n    const [counter, setCounter] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const updateCounter = async () => {\n        setCounter((c) => c + 1);\n        setVisible(true);\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n        setVisible(false);\n    };\n\n    return (\n        <div>\n            <header>\n                This is a header that will not be overlapped by absolute curtain\n            </header>\n            <div style={{\n                position: 'relative',\n            }}>\n\n                <Curtain {...props} visible={visible}>\n                    This is the page contents: {counter}\n                    <br />\n                    <button onClick={updateCounter}>\n                        Click me to increment the counter\n                    </button>\n                </Curtain>\n            </div>\n        </div>\n    );\n};\n"],"names":["Layout","props","counter","setCounter","useState","visible","setVisible","updateCounter","c","resolve","jsxs","jsx","Curtain"],"mappings":"gIAIO,MAAAA,EAAAC,GAAA,CACH,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EACAG,EAAA,SAAA,CACIJ,EAAAK,GAAAA,EAAA,CAAA,EACAF,EAAA,EAAA,EACA,MAAA,IAAA,QAAAG,GAAA,WAAAA,EAAA,GAAA,CAAA,EACAH,EAAA,EAAA,CAAgB,EAGpB,OAAAI,EAAA,KAAA,MAAA,CAAA,SAAA,CAEQC,EAAAA,IAAA,SAAA,CAAA,SAAA,kEAAA,CAAA,EAEAA,MAAA,MAAA,CAAA,MAAA,CACY,SAAA,UACE,EAAA,SAAAD,EAAAA,KAAAE,EAAA,CAAA,GAAAX,EAAA,QAAAI,EAAA,SAAA,CAG4B,8BAAAH,EACNS,EAAA,IAAA,KAAA,EAAA,EACxBA,EAAA,IAAA,SAAA,CAAA,QAAAJ,EAAA,SAAA,oCAAA,CAGJ,CAAA,CAAA,CAAA,CAAA,CAER,CAAA,CAAA,CAGZ;;;;;;;;;;;;"}